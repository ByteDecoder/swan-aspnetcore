{
  "api/Unosquare.Swan.AspNetCore.BasicRoleStore.html": {
    "href": "api/Unosquare.Swan.AspNetCore.BasicRoleStore.html",
    "title": "Class BasicRoleStore | Unosquare SWAN ASPNetCore",
    "keywords": "Class BasicRoleStore Represents a basic RoleStore for AspNetCore Identity. Inheritance System.Object BasicRoleStore Namespace : Unosquare.Swan.AspNetCore Syntax public class BasicRoleStore : IRoleStore<ApplicationRole> Constructors BasicRoleStore() Initializes a new instance of the BasicRoleStore class. Declaration public BasicRoleStore() Methods CreateAsync(ApplicationRole, CancellationToken) Creates a new role in a store as an asynchronous operation. Declaration public Task<IdentityResult> CreateAsync(ApplicationRole role, CancellationToken cancellationToken) Parameters Type Name Description ApplicationRole role The role to create in the store. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < IdentityResult > A System.Threading.Tasks.Task<TResult> that represents the Microsoft.AspNetCore.Identity.IdentityResult of the asynchronous query. DeleteAsync(ApplicationRole, CancellationToken) Deletes a role from the store as an asynchronous operation. Declaration public Task<IdentityResult> DeleteAsync(ApplicationRole role, CancellationToken cancellationToken) Parameters Type Name Description ApplicationRole role The role to delete from the store. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < IdentityResult > A System.Threading.Tasks.Task<TResult> that represents the Microsoft.AspNetCore.Identity.IdentityResult of the asynchronous query. Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() FindByIdAsync(String, CancellationToken) Finds the role who has the specified ID as an asynchronous operation. Declaration public Task<ApplicationRole> FindByIdAsync(string roleId, CancellationToken cancellationToken) Parameters Type Name Description System.String roleId The role ID to look for. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < ApplicationRole > A System.Threading.Tasks.Task<TResult> that result of the look up. FindByNameAsync(String, CancellationToken) Finds the role who has the specified normalized name as an asynchronous operation. Declaration public Task<ApplicationRole> FindByNameAsync(string normalizedRoleName, CancellationToken cancellationToken) Parameters Type Name Description System.String normalizedRoleName The normalized role name to look for. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < ApplicationRole > A System.Threading.Tasks.Task<TResult> that result of the look up. GetNormalizedRoleNameAsync(ApplicationRole, CancellationToken) Get a role's normalized name as an asynchronous operation. Declaration public Task<string> GetNormalizedRoleNameAsync(ApplicationRole role, CancellationToken cancellationToken) Parameters Type Name Description ApplicationRole role The role whose normalized name should be retrieved. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.String > A System.Threading.Tasks.Task<TResult> that contains the name of the role. GetRoleIdAsync(ApplicationRole, CancellationToken) Gets the ID for a role from the store as an asynchronous operation. Declaration public Task<string> GetRoleIdAsync(ApplicationRole role, CancellationToken cancellationToken) Parameters Type Name Description ApplicationRole role The role whose ID should be returned. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.String > A System.Threading.Tasks.Task<TResult> that contains the ID of the role. GetRoleNameAsync(ApplicationRole, CancellationToken) Gets the name of a role from the store as an asynchronous operation. Declaration public Task<string> GetRoleNameAsync(ApplicationRole role, CancellationToken cancellationToken) Parameters Type Name Description ApplicationRole role The role whose name should be returned. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.String > A System.Threading.Tasks.Task<TResult> that contains the name of the role. SetNormalizedRoleNameAsync(ApplicationRole, String, CancellationToken) Set a role's normalized name as an asynchronous operation. Declaration public Task SetNormalizedRoleNameAsync(ApplicationRole role, string normalizedName, CancellationToken cancellationToken) Parameters Type Name Description ApplicationRole role The role whose normalized name should be set. System.String normalizedName The normalized name to set. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task The System.Threading.Tasks.Task that represents the asynchronous operation. SetRoleNameAsync(ApplicationRole, String, CancellationToken) Sets the name of a role in the store as an asynchronous operation. Declaration public Task SetRoleNameAsync(ApplicationRole role, string roleName, CancellationToken cancellationToken) Parameters Type Name Description ApplicationRole role The role whose name should be set. System.String roleName The name of the role. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task The System.Threading.Tasks.Task that represents the asynchronous operation. UpdateAsync(ApplicationRole, CancellationToken) Updates a role in a store as an asynchronous operation. Declaration public Task<IdentityResult> UpdateAsync(ApplicationRole role, CancellationToken cancellationToken) Parameters Type Name Description ApplicationRole role The role to update in the store. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < IdentityResult > A System.Threading.Tasks.Task<TResult> that represents the Microsoft.AspNetCore.Identity.IdentityResult of the asynchronous query. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.BasicUserStore.html": {
    "href": "api/Unosquare.Swan.AspNetCore.BasicUserStore.html",
    "title": "Class BasicUserStore | Unosquare SWAN ASPNetCore",
    "keywords": "Class BasicUserStore Represents a basic UserStore for AspNetCore Identity. Inheritance System.Object BasicUserStore Implements IUserLoginStore < ApplicationUser > IUserPhoneNumberStore < ApplicationUser > IUserTwoFactorStore < ApplicationUser > Namespace : Unosquare.Swan.AspNetCore Syntax public class BasicUserStore : IUserPasswordStore<ApplicationUser>, IUserLoginStore<ApplicationUser>, IUserPhoneNumberStore<ApplicationUser>, IUserTwoFactorStore<ApplicationUser> Constructors BasicUserStore() Initializes a new instance of the BasicUserStore class. Declaration public BasicUserStore() Methods AddLoginAsync(ApplicationUser, UserLoginInfo, CancellationToken) Adds an external Microsoft.AspNetCore.Identity.UserLoginInfo to the specified user . Declaration public Task AddLoginAsync(ApplicationUser user, UserLoginInfo login, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user to add the login to. UserLoginInfo login The external Microsoft.AspNetCore.Identity.UserLoginInfo to add to the specified user . System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task The System.Threading.Tasks.Task that represents the asynchronous operation. Exceptions Type Condition System.NotImplementedException Throws NotImplementedException. CreateAsync(ApplicationUser, CancellationToken) Creates the specified user in the user store. Declaration public Task<IdentityResult> CreateAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user to create. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < IdentityResult > The System.Threading.Tasks.Task that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the creation operation. DeleteAsync(ApplicationUser, CancellationToken) Deletes the specified user from the user store. Declaration public Task<IdentityResult> DeleteAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user to delete. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < IdentityResult > The System.Threading.Tasks.Task that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the update operation. Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() FindByIdAsync(String, CancellationToken) Finds and returns a user, if any, who has the specified userId . Declaration public Task<ApplicationUser> FindByIdAsync(string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String userId The user ID to search for. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < ApplicationUser > The System.Threading.Tasks.Task that represents the asynchronous operation, containing the user matching the specified userId if it exists. FindByLoginAsync(String, String, CancellationToken) Retrieves the user associated with the specified login provider and login provider key.. Declaration public Task<ApplicationUser> FindByLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken) Parameters Type Name Description System.String loginProvider The login provider who provided the providerKey . System.String providerKey The key provided by the loginProvider to identify a user. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < ApplicationUser > The System.Threading.Tasks.Task for the asynchronous operation, containing the user, if any which matched the specified login provider and key. Exceptions Type Condition System.NotImplementedException Throws NotImplementedException. FindByNameAsync(String, CancellationToken) Finds and returns a user, if any, who has the specified normalized user name. Declaration public Task<ApplicationUser> FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken) Parameters Type Name Description System.String normalizedUserName The normalized user name to search for. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < ApplicationUser > The System.Threading.Tasks.Task that represents the asynchronous operation, containing the user matching the specified normalizedUserName if it exists. GetLoginsAsync(ApplicationUser, CancellationToken) Retrieves the associated logins for the specified . Declaration public Task<IList<UserLoginInfo>> GetLoginsAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose associated logins to retrieve. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IList < UserLoginInfo >> The System.Threading.Tasks.Task for the asynchronous operation, containing a list of Microsoft.AspNetCore.Identity.UserLoginInfo for the specified user , if any. GetNormalizedUserNameAsync(ApplicationUser, CancellationToken) Gets the normalized user name for the specified user . Declaration public Task<string> GetNormalizedUserNameAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose normalized name should be retrieved. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.String > The System.Threading.Tasks.Task that represents the asynchronous operation, containing the normalized user name for the specified user . GetPasswordHashAsync(ApplicationUser, CancellationToken) Gets the password hash for the specified user . Declaration public Task<string> GetPasswordHashAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose password hash to retrieve. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.String > The System.Threading.Tasks.Task that represents the asynchronous operation, returning the password hash for the specified user . GetPhoneNumberAsync(ApplicationUser, CancellationToken) Gets the telephone number, if any, for the specified user . Declaration public Task<string> GetPhoneNumberAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose telephone number should be retrieved. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.String > The System.Threading.Tasks.Task that represents the asynchronous operation, containing the user's telephone number, if any. GetPhoneNumberConfirmedAsync(ApplicationUser, CancellationToken) Gets a flag indicating whether the specified user 's telephone number has been confirmed. Declaration public Task<bool> GetPhoneNumberConfirmedAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user to return a flag for, indicating whether their telephone number is confirmed. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.Boolean > The System.Threading.Tasks.Task that represents the asynchronous operation, returning true if the specified user has a confirmed telephone number otherwise false. GetTwoFactorEnabledAsync(ApplicationUser, CancellationToken) Returns a flag indicating whether the specified user has two factor authentication enabled or not, as an asynchronous operation. Declaration public Task<bool> GetTwoFactorEnabledAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose two factor authentication enabled status should be set. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.Boolean > The System.Threading.Tasks.Task that represents the asynchronous operation, containing a flag indicating whether the specified user has two factor authentication enabled or not. GetUserIdAsync(ApplicationUser, CancellationToken) Gets the user identifier for the specified user . Declaration public Task<string> GetUserIdAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose identifier should be retrieved. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.String > The System.Threading.Tasks.Task that represents the asynchronous operation, containing the identifier for the specified user . GetUserNameAsync(ApplicationUser, CancellationToken) Gets the user name for the specified user . Declaration public Task<string> GetUserNameAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose name should be retrieved. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.String > The System.Threading.Tasks.Task that represents the asynchronous operation, containing the name for the specified user . HasPasswordAsync(ApplicationUser, CancellationToken) Gets a flag indicating whether the specified user has a password. Declaration public Task<bool> HasPasswordAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user to return a flag for, indicating whether they have a password or not. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < System.Boolean > The System.Threading.Tasks.Task that represents the asynchronous operation, returning true if the specified user has a password otherwise false. RemoveLoginAsync(ApplicationUser, String, String, CancellationToken) Attempts to remove the provided login information from the specified user . and returns a flag indicating whether the removal succeed or not. Declaration public Task RemoveLoginAsync(ApplicationUser user, string loginProvider, string providerKey, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user to remove the login information from. System.String loginProvider The login provide whose information should be removed. System.String providerKey The key given by the external login provider for the specified user. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task The System.Threading.Tasks.Task that represents the asynchronous operation. Exceptions Type Condition System.NotImplementedException Throws NotImplementedException. SetNormalizedUserNameAsync(ApplicationUser, String, CancellationToken) Sets the given normalized name for the specified user . Declaration public Task SetNormalizedUserNameAsync(ApplicationUser user, string normalizedName, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose name should be set. System.String normalizedName The normalized name to set. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task The System.Threading.Tasks.Task that represents the asynchronous operation. SetPasswordHashAsync(ApplicationUser, String, CancellationToken) Sets the password hash for the specified user . Declaration public Task SetPasswordHashAsync(ApplicationUser user, string passwordHash, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose password hash to set. System.String passwordHash The password hash to set. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task The System.Threading.Tasks.Task that represents the asynchronous operation. SetPhoneNumberAsync(ApplicationUser, String, CancellationToken) Sets the telephone number for the specified user . Declaration public Task SetPhoneNumberAsync(ApplicationUser user, string phoneNumber, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose telephone number should be set. System.String phoneNumber The telephone number to set. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task The System.Threading.Tasks.Task that represents the asynchronous operation. SetPhoneNumberConfirmedAsync(ApplicationUser, Boolean, CancellationToken) Sets a flag indicating if the specified user 's phone number has been confirmed.. Declaration public Task SetPhoneNumberConfirmedAsync(ApplicationUser user, bool confirmed, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose telephone number confirmation status should be set. System.Boolean confirmed A flag indicating whether the user's telephone number has been confirmed. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task The System.Threading.Tasks.Task that represents the asynchronous operation. SetTwoFactorEnabledAsync(ApplicationUser, Boolean, CancellationToken) Sets a flag indicating whether the specified user has two factor authentication enabled or not, as an asynchronous operation. Declaration public Task SetTwoFactorEnabledAsync(ApplicationUser user, bool enabled, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose two factor authentication enabled status should be set. System.Boolean enabled A flag indicating whether the specified user has two factor authentication enabled. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task The System.Threading.Tasks.Task that represents the asynchronous operation. SetUserNameAsync(ApplicationUser, String, CancellationToken) Sets the given userName for the specified user . Declaration public Task SetUserNameAsync(ApplicationUser user, string userName, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user whose name should be set. System.String userName The user name to set. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task The System.Threading.Tasks.Task that represents the asynchronous operation. UpdateAsync(ApplicationUser, CancellationToken) Updates the specified user in the user store. Declaration public Task<IdentityResult> UpdateAsync(ApplicationUser user, CancellationToken cancellationToken) Parameters Type Name Description ApplicationUser user The user to update. System.Threading.CancellationToken cancellationToken The System.Threading.CancellationToken used to propagate notifications that the operation should be canceled. Returns Type Description System.Threading.Tasks.Task < IdentityResult > The System.Threading.Tasks.Task that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the update operation. Implements IUserLoginStore<> IUserPhoneNumberStore<> IUserTwoFactorStore<> Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.BusinessRuleAttribute.html": {
    "href": "api/Unosquare.Swan.AspNetCore.BusinessRuleAttribute.html",
    "title": "Class BusinessRuleAttribute | Unosquare SWAN ASPNetCore",
    "keywords": "Class BusinessRuleAttribute Decorate methods with this attribute to execute business rules that match the following signature: public void MethodName(T entity). Inheritance System.Object System.Attribute BusinessRuleAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)] public class BusinessRuleAttribute : Attribute, _Attribute Constructors BusinessRuleAttribute(Type, ActionFlags) Initializes a new instance of the BusinessRuleAttribute class. Declaration public BusinessRuleAttribute(Type entityType, ActionFlags actionFlags) Parameters Type Name Description System.Type entityType Type of the entity. ActionFlags actionFlags The action flags. BusinessRuleAttribute(Type[], ActionFlags) Initializes a new instance of the BusinessRuleAttribute class. Declaration public BusinessRuleAttribute(Type[] entityTypes, ActionFlags actionFlags) Parameters Type Name Description System.Type [] entityTypes The entity types. ActionFlags actionFlags The action flags. BusinessRuleAttribute(ActionFlags) Initializes a new instance of the BusinessRuleAttribute class. Declaration public BusinessRuleAttribute(ActionFlags actionFlags) Parameters Type Name Description ActionFlags actionFlags The action flags. Properties Action Gets or sets the action. Declaration public ActionFlags Action { get; protected set; } Property Value Type Description ActionFlags The action. EntityTypes Gets or sets the entity types. Declaration public Type[] EntityTypes { get; protected set; } Property Value Type Description System.Type [] The entity types. Implements System.Runtime.InteropServices._Attribute See Also System.Attribute Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.Extensions.html": {
    "href": "api/Unosquare.Swan.AspNetCore.Extensions.html",
    "title": "Class Extensions | Unosquare SWAN ASPNetCore",
    "keywords": "Class Extensions Extensions methods to implement SWAN providers. Inheritance System.Object Extensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore Syntax public static class Extensions Fields JsonMimeType The JSON MIME type. Declaration public const string JsonMimeType = \"application/json\" Field Value Type Description System.String Methods AddBearerTokenAuthentication(IServiceCollection, TokenValidationParameters) Adds the bearer token authentication. Declaration public static IServiceCollection AddBearerTokenAuthentication(this IServiceCollection services, TokenValidationParameters validationParameters) Parameters Type Name Description IServiceCollection services The services. TokenValidationParameters validationParameters The validation parameters. Returns Type Description IServiceCollection The service with bearer token authentication. AddEntityFramework<TDbContext, TLog>(ILoggerFactory, IServiceProvider, Func<String, LogLevel, Boolean>) Adds the entity framework logger. Declaration public static ILoggerFactory AddEntityFramework<TDbContext, TLog>(this ILoggerFactory factory, IServiceProvider serviceProvider, Func<string, LogLevel, bool> filter = null) where TDbContext : DbContext where TLog : LogEntry, new() Parameters Type Name Description ILoggerFactory factory The factory. System.IServiceProvider serviceProvider The service provider. System.Func < System.String , System.LogLevel , System.Boolean > filter The filter. Returns Type Description ILoggerFactory The logger factory. Type Parameters Name Description TDbContext The type of the database context. TLog The type of the log. Exceptions Type Condition System.ArgumentNullException factory. AddEntityFramework<TDbContext, TLog>(ILoggingBuilder, Func<String, LogLevel, Boolean>) Adds the entity framework. Declaration public static ILoggingBuilder AddEntityFramework<TDbContext, TLog>(this ILoggingBuilder builder, Func<string, LogLevel, bool> filter = null) where TDbContext : DbContext where TLog : LogEntry, new() Parameters Type Name Description ILoggingBuilder builder The builder. System.Func < System.String , System.LogLevel , System.Boolean > filter The filter. Returns Type Description ILoggingBuilder The logger builder. Type Parameters Name Description TDbContext The type of the database context. TLog The type of the log. Exceptions Type Condition System.ArgumentNullException builder. AddLoggingEntityFramework<TDbContext, TLog>(IServiceCollection, Func<String, LogLevel, Boolean>) Adds the logging entity framework. Declaration public static IServiceCollection AddLoggingEntityFramework<TDbContext, TLog>(this IServiceCollection services, Func<string, LogLevel, bool> filter = null) where TDbContext : DbContext where TLog : LogEntry, new() Parameters Type Name Description IServiceCollection services The services. System.Func < System.String , System.LogLevel , System.Boolean > filter The filter. Returns Type Description IServiceCollection The services collection. Type Parameters Name Description TDbContext The type of the database context. TLog The type of the log. GetJsonAsync<T>(HttpClient, String) Send a GET request to the specified Uri and return the response body as a JSON in an asynchronous operation. Declaration public static Task<T> GetJsonAsync<T>(this HttpClient client, string requestUri) Parameters Type Name Description HttpClient client The client. System.String requestUri The request URI. Returns Type Description System.Threading.Tasks.Task <T> The object from the JSON. Type Parameters Name Description T The type of object to return. GetJsonAsync<T>(HttpClient, Uri) Send a GET request to the specified Uri and return the response body as a JSON in an asynchronous operation. Declaration public static Task<T> GetJsonAsync<T>(this HttpClient client, Uri requestUri) Parameters Type Name Description HttpClient client The client. Uri requestUri The request URI. Returns Type Description System.Threading.Tasks.Task <T> The object from the JSON. Type Parameters Name Description T The type of object to return. ReadAsJsonAsync<T>(HttpContent) Serialize the HTTP content to a JSON as an asynchronous operation. Declaration public static Task<T> ReadAsJsonAsync<T>(this HttpContent httpContent) Parameters Type Name Description HttpContent httpContent Content of the HTTP. Returns Type Description System.Threading.Tasks.Task <T> The object from the JSON. Type Parameters Name Description T The type of object to return. UseAuditTrail<T, TEntity>(IBusinessDbContext, String) Extension method to add AuditTrail to a DbContext. Declaration public static IBusinessDbContext UseAuditTrail<T, TEntity>(this IBusinessDbContext context, string currentUserId) where T : DbContext Parameters Type Name Description IBusinessDbContext context The Db context. System.String currentUserId The Id of the principal claim. Returns Type Description IBusinessDbContext The Db context with the audit controller. Type Parameters Name Description T The context. TEntity The type of the entity. UseBearerTokenAuthentication(IApplicationBuilder, TokenValidationParameters, Func<IServiceProvider, String, String, String, String, Task<ClaimsIdentity>>, Func<ClaimsIdentity, Dictionary<String, Object>, Task<Dictionary<String, Object>>>, TimeSpan, Boolean) Uses the bearer token provider. Declaration public static IApplicationBuilder UseBearerTokenAuthentication(this IApplicationBuilder app, TokenValidationParameters validationParameter, Func<IServiceProvider, string, string, string, string, Task<ClaimsIdentity>> identityResolver, Func<ClaimsIdentity, Dictionary<string, object>, Task<Dictionary<string, object>>> bearerTokenResolver = null, TimeSpan expiration = default(TimeSpan), bool forceHttps = true) Parameters Type Name Description IApplicationBuilder app The application. TokenValidationParameters validationParameter The validation parameter. System.Func < System.IServiceProvider , System.String , System.String , System.String , System.String , System.Threading.Tasks.Task < System.Security.Claims.ClaimsIdentity >> identityResolver The identity resolver. System.Func < System.Security.Claims.ClaimsIdentity , System.Collections.Generic.Dictionary < System.String , System.Object >, System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.Object >>> bearerTokenResolver The bearer token resolver. System.TimeSpan expiration The expiration. System.Boolean forceHttps if set to true [force HTTPS]. Returns Type Description IApplicationBuilder The application build with bearer token authentication. UseFallback(IApplicationBuilder, String, Func<PathString, Boolean>) Uses the fallback to redirect everything without extension. Declaration public static IApplicationBuilder UseFallback(this IApplicationBuilder app, string fallbackPath = \"/index.html\", Func<PathString, bool> ignoreCheck = null) Parameters Type Name Description IApplicationBuilder app The application. System.String fallbackPath The fallback path. System.Func < PathString , System.Boolean > ignoreCheck The ignore check. Returns Type Description IApplicationBuilder The application builder with the fallback. UseJsonExceptionHandler(IApplicationBuilder) Uses the json exception handler. Declaration public static IApplicationBuilder UseJsonExceptionHandler(this IApplicationBuilder app) Parameters Type Name Description IApplicationBuilder app The application. Returns Type Description IApplicationBuilder The exception handler. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.IBusinessRulesController.html": {
    "href": "api/Unosquare.Swan.AspNetCore.IBusinessRulesController.html",
    "title": "Interface IBusinessRulesController | Unosquare SWAN ASPNetCore",
    "keywords": "Interface IBusinessRulesController Represents a Business Rules Controller. Namespace : Unosquare.Swan.AspNetCore Syntax public interface IBusinessRulesController Methods RunBusinessRules() Runs the business rules. Declaration void RunBusinessRules() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.Logger.EntityFrameworkLoggerOptions.html": {
    "href": "api/Unosquare.Swan.AspNetCore.Logger.EntityFrameworkLoggerOptions.html",
    "title": "Class EntityFrameworkLoggerOptions | Unosquare SWAN ASPNetCore",
    "keywords": "Class EntityFrameworkLoggerOptions Represents the EF Logger options. Inheritance System.Object EntityFrameworkLoggerOptions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore.Logger Syntax public class EntityFrameworkLoggerOptions Properties Filters Gets or sets the filters. Declaration public Dictionary<string, LogLevel> Filters { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.LogLevel > Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.Logger.html": {
    "href": "api/Unosquare.Swan.AspNetCore.Logger.html",
    "title": "Namespace Unosquare.Swan.AspNetCore.Logger | Unosquare SWAN ASPNetCore",
    "keywords": "Namespace Unosquare.Swan.AspNetCore.Logger Classes EntityFrameworkLogger<TDbContext, TLog> Represents a Logger using EntityFramework Based on https://github.com/staff0rd/entityframework-logging . EntityFrameworkLoggerOptions Represents the EF Logger options. EntityFrameworkLoggerProvider<TDbContext, TLog> Represents a EF logger provider. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.Models.ApplicationRole.html": {
    "href": "api/Unosquare.Swan.AspNetCore.Models.ApplicationRole.html",
    "title": "Class ApplicationRole | Unosquare SWAN ASPNetCore",
    "keywords": "Class ApplicationRole Represents a Role. Inheritance System.Object ApplicationRole Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore.Models Syntax public class ApplicationRole Properties RoleId Gets or sets the role identifier. Declaration public string RoleId { get; set; } Property Value Type Description System.String RoleName Gets or sets the name of the role. Declaration public string RoleName { get; set; } Property Value Type Description System.String Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.TokenProviderMiddleware.html": {
    "href": "api/Unosquare.Swan.AspNetCore.TokenProviderMiddleware.html",
    "title": "Class TokenProviderMiddleware | Unosquare SWAN ASPNetCore",
    "keywords": "Class TokenProviderMiddleware Token generator middleware component which is added to an HTTP pipeline. Inheritance System.Object TokenProviderMiddleware Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore Syntax public class TokenProviderMiddleware Constructors TokenProviderMiddleware(RequestDelegate, IOptions<TokenProviderOptions>, ILoggerFactory, IServiceProvider) Initializes a new instance of the TokenProviderMiddleware class. Declaration public TokenProviderMiddleware(RequestDelegate next, IOptions<TokenProviderOptions> options, ILoggerFactory loggerFactory, IServiceProvider services) Parameters Type Name Description RequestDelegate next The next. IOptions < TokenProviderOptions > options The options. ILoggerFactory loggerFactory The logger factory. System.IServiceProvider services The services. Methods Invoke(HttpContext) Invokes the specified context. Declaration public Task Invoke(HttpContext context) Parameters Type Name Description HttpContext context The context. Returns Type Description System.Threading.Tasks.Task The token to the specific context. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.TokenProviderOptions.html": {
    "href": "api/Unosquare.Swan.AspNetCore.TokenProviderOptions.html",
    "title": "Class TokenProviderOptions | Unosquare SWAN ASPNetCore",
    "keywords": "Class TokenProviderOptions Provides options for TokenProviderMiddleware . Inheritance System.Object TokenProviderOptions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore Syntax public class TokenProviderOptions Properties Audience The Audience (aud) claim for the generated tokens. Declaration public string Audience { get; set; } Property Value Type Description System.String BearerTokenResolver Resolves a bearer token response. Declaration public Func<ClaimsIdentity, Dictionary<string, object>, Task<Dictionary<string, object>>> BearerTokenResolver { get; set; } Property Value Type Description System.Func < System.Security.Claims.ClaimsIdentity , System.Collections.Generic.Dictionary < System.String , System.Object >, System.Threading.Tasks.Task < System.Collections.Generic.Dictionary < System.String , System.Object >>> ClaimResolver Resolves the claims from a user. Declaration public Func<ClaimsIdentity, Task<Claim[]>> ClaimResolver { get; set; } Property Value Type Description System.Func < System.Security.Claims.ClaimsIdentity , System.Threading.Tasks.Task < System.Security.Claims.Claim []>> Expiration The expiration time for the generated tokens. Declaration public TimeSpan Expiration { get; set; } Property Value Type Description System.TimeSpan Remarks The default is five minutes (300 seconds). ForceHttps Gets or sets a value indicating whether [force HTTPS]. Declaration public bool ForceHttps { get; set; } Property Value Type Description System.Boolean IdentityResolver Resolves a user identity given a username and password. Declaration public Func<IServiceProvider, string, string, string, string, Task<ClaimsIdentity>> IdentityResolver { get; set; } Property Value Type Description System.Func < System.IServiceProvider , System.String , System.String , System.String , System.String , System.Threading.Tasks.Task < System.Security.Claims.ClaimsIdentity >> Issuer The Issuer (iss) claim for generated tokens. Declaration public string Issuer { get; set; } Property Value Type Description System.String NonceGenerator Generates a random value (nonce) for each generated token. Declaration public Func<Task<string>> NonceGenerator { get; set; } Property Value Type Description System.Func < System.Threading.Tasks.Task < System.String >> Remarks The default nonce is a random GUID. Path The relative request path to listen on. Declaration public string Path { get; set; } Property Value Type Description System.String Remarks The default path is /api/token . SigningCredentials The signing key to use when generating tokens. Declaration public SigningCredentials SigningCredentials { get; set; } Property Value Type Description SigningCredentials Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "README.html": {
    "href": "README.html",
    "title": "Swan ASP.NET Core 2: Stuff We All Need | Unosquare SWAN ASPNetCore",
    "keywords": "Swan ASP.NET Core 2: Stuff We All Need ⭐ Please star this project if you find it useful! A set of libraries to use with ASP.NET Core 2.1 applications. Also, includes a configure middleware and extension to setup your project. ASP.NET Core 2.1 came with a lot of changes, including authentication and authorization, here with Swan ASP.NET Core 2.1 is easy to configure and start working on your project. NuGet Installation: PM> Install-Package Unosquare.Swan.AspNetCore Use Cases Here we can find a very useful code to use in our project configuration. All of this you can use it in your Startup.cs file, see our Sample Project for more reference. Using Bearer Token Authentication The extension method AddBearerTokenAuthentication adds the services that are going to be used in your application. This method uses the Jwt schemes and adds a JwtBearer with the Token Validation Parameters that you configure. Jwt stands for JSON Web Tokens The extension method UseBearerTokenAuthentication is important because it gives the application the requirements to use authentication and authorization with JWT. With this configuration, you just need to add the data annotation [Authorize] to your API to say that the user needs to be authorized to access that part of your project. This two are used together because you need to add the bearer token authentication to the services to use the bearer token authentication in your application. You just need to add in your ConfigureServices and your Configure . // This method gets called by the runtime. Use this method to add services to the container public void ConfigureServices(IServiceCollection services) { // Extension method to add Bearer authentication services.AddBearerTokenAuthentication(ValidationParameters); } // This method gets called by the runtime. Use this method to configure the HTTP request pipeline public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) { // Use the bearer token provider and check Admin and Pass.word as valid credentials app.UseBearerTokenAuthentication( ValidationParameters, (services, username, password, grantType, clientId) => { if (username != \"Admin\" || password != \"Pass.word\") return Task.FromResult<ClaimsIdentity>(null); var claim = new ClaimsIdentity(\"Bearer\"); claim.AddClaim(new Claim(ClaimTypes.Name, username)); return Task.FromResult(claim); }, (identity, obj) => { // This action is optional obj[\"test\"] = \"OK\"; return Task.FromResult(obj); }); } Using EntityFrameworkLogger The EntityFrameworkLogger represents a Logger based on Entity Framework and adds a Logging subsystem. It will help you log into your Database everything necessary to know what’s going on in your application. This logger is used in the ConfigureServices method of your Startup.cs file. With this you just add your configuration section and then add in the entity framework, your database context and the models that you use for log entries into your database, then you just pass the application services. public void ConfigureServices(IServiceCollection services) { // Inject your DbContext first. // Add Entity Framework Logging Provider services.AddLoggingEntityFramework<SampleDbContext, Models.LogEntry>(); } Using BusinessDbContext The BusinessDbContext run business rules when you save changes to the database. It's helpful because if you want to modify an entity every time you save changes to the database, you can create a controller to do that. Your Db Context must inheritance from the BusinessDbContext in order to have this functionality and then you can add, remove and check for controllers using your context. public class SampleDbContext : BusinessDbContext { public SampleDbContext(DbContextOptions<SampleDbContext> options) : base(options) { } } AuditTrail Audit Trails is a business rule to save the changes to any operation performed in a record. In other words, capture what change between any data saving. This operation is important in many systems and you can accomplish with these extensions easily. The AuditTrailController can be attached to your BusinessDbContext and setup which Entities will be recorded in the three CRUD actions supported, create, update and delete. public class SampleDbContext : BusinessDbContext { public SampleDbContext(DbContextOptions<SampleDbContext> options, IHttpContextAccessor httpContextAccessor) : base(options) { var auditController = new AuditTrailController<SampleDbContext, AuditTrailEntry>(this, httpContextAccessor?.HttpContext?.User?.Identity?.Name); auditController.AddTypes(ActionFlags.Create, new[] {typeof(Product)}); AddController(auditController); } public DbSet<AuditTrailEntry> AuditTrailEntries { get; set; } } Additional Extension Methods Use the following extension methods to extend the ApplicationBuilder with helpful handlers. The JsonExceptionHandler Adding this extension is a very good way to debug your application. When an error occurs, the exception handles the error and send a 500 Internal Server Error HTTP Response with a JSON object containing useful information as stacktrace and inner exceptions. // Response an exception as JSON at error app.UseJsonExceptionHandler(); The Fallback Redirect any 404 request without extension to specific URL like your index.html page. This is helpful when you are using client-side routing (like Angular) and redirect any unknown URL to the javascript application. // Redirect anything without extension to index.html app.UseFallback();"
  },
  "api/Unosquare.Swan.AspNetCore.ActionFlags.html": {
    "href": "api/Unosquare.Swan.AspNetCore.ActionFlags.html",
    "title": "Enum ActionFlags | Unosquare SWAN ASPNetCore",
    "keywords": "Enum ActionFlags defines a combination of actions in a CRUD pattern. Namespace : Unosquare.Swan.AspNetCore Syntax [Flags] public enum ActionFlags Fields Name Description Create Create action Delete Delete Action None None action Update Update action Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.ApiControllerBase-1.html": {
    "href": "api/Unosquare.Swan.AspNetCore.ApiControllerBase-1.html",
    "title": "Class ApiControllerBase<TDbContext> | Unosquare SWAN ASPNetCore",
    "keywords": "Class ApiControllerBase<TDbContext> Represents a API Controller with extended methods related to the database provide in T . Inheritance System.Object ApiControllerBase<TDbContext> Namespace : Unosquare.Swan.AspNetCore Syntax public abstract class ApiControllerBase<TDbContext> : ControllerBase where TDbContext : DbContext Type Parameters Name Description TDbContext The database type. Constructors ApiControllerBase(TDbContext) Initializes a new instance of the ApiControllerBase<TDbContext> class. Declaration protected ApiControllerBase(TDbContext dbContext) Parameters Type Name Description TDbContext dbContext The database context. Properties DbContext Gets the database context. Declaration protected TDbContext DbContext { get; } Property Value Type Description TDbContext The database context. Methods Create<TEntity>(TEntity, CancellationToken) Creates the specified model. Declaration public Task<IActionResult> Create<TEntity>(TEntity model, CancellationToken cancellationToken = default(CancellationToken)) where TEntity : class Parameters Type Name Description TEntity model The model. System.Threading.CancellationToken cancellationToken The cancellation token. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the database operation. Type Parameters Name Description TEntity The type of the entity. Delete<TEntity>(Object[]) Deletes the specified model by the provided keys. Declaration public Task<IActionResult> Delete<TEntity>(params object[] keys) where TEntity : class Parameters Type Name Description System.Object [] keys The keys. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the database operation. Type Parameters Name Description TEntity The type of the entity. Delete<TEntity>(Object[], CancellationToken) Deletes the specified model by the provided keys. Declaration public Task<IActionResult> Delete<TEntity>(object[] keys, CancellationToken cancellationToken) where TEntity : class Parameters Type Name Description System.Object [] keys The keys. System.Threading.CancellationToken cancellationToken The cancellation token. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the database operation. Type Parameters Name Description TEntity The type of the entity. FirstOrNotFound<TEntity>(Expression<Func<TEntity, Boolean>>, Expression<Func<TEntity, Object>>, CancellationToken) Retrieve the first element with the selection expression and matching the where expression or not found response code (404). Declaration public virtual Task<IActionResult> FirstOrNotFound<TEntity>(Expression<Func<TEntity, bool>> whereExpression, Expression<Func<TEntity, object>> selectExpression, CancellationToken cancellationToken = default(CancellationToken)) where TEntity : class Parameters Type Name Description Expression < System.Func <TEntity, System.Boolean >> whereExpression The where expression. Expression < System.Func <TEntity, System.Object >> selectExpression The select expression. System.Threading.CancellationToken cancellationToken The cancellation token. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the query database operation. Type Parameters Name Description TEntity The type of the entity. FirstOrNotFound<TEntity>(Expression<Func<TEntity, Boolean>>, CancellationToken) Retrieve the first element matching the where expression or not found response code (404). Declaration public virtual Task<IActionResult> FirstOrNotFound<TEntity>(Expression<Func<TEntity, bool>> whereExpression, CancellationToken cancellationToken = default(CancellationToken)) where TEntity : class Parameters Type Name Description Expression < System.Func <TEntity, System.Boolean >> whereExpression The where expression. System.Threading.CancellationToken cancellationToken The cancellation token. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the query database operation. Type Parameters Name Description TEntity The type of the entity. Query<TEntity>(Func<IQueryable<TEntity>, IQueryable>) Queries the specified query. Declaration public Task<IActionResult> Query<TEntity>(Func<IQueryable<TEntity>, IQueryable> query) where TEntity : class Parameters Type Name Description System.Func < IQueryable <TEntity>, IQueryable > query The query. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the query to the database. Type Parameters Name Description TEntity The type of the entity. Single<TEntity>(Object[]) Finds the matching element using the provided keys or not found response code (404). Declaration public virtual Task<IActionResult> Single<TEntity>(params object[] keys) where TEntity : class Parameters Type Name Description System.Object [] keys The keys. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the query database operation. Type Parameters Name Description TEntity The type of the entity. Single<TEntity>(Object[], CancellationToken) Finds the matching element using the provided keys or not found response code (404). Declaration public virtual Task<IActionResult> Single<TEntity>(object[] keys, CancellationToken cancellationToken) where TEntity : class Parameters Type Name Description System.Object [] keys The keys. System.Threading.CancellationToken cancellationToken The cancellation token. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the query database operation. Type Parameters Name Description TEntity The type of the entity. Update<TEntity>(TEntity, Object[]) Updates the specified model. If the entity class contains the Copyable attribute will copy only the tagged properties. Declaration public Task<IActionResult> Update<TEntity>(TEntity model, params object[] keys) where TEntity : class Parameters Type Name Description TEntity model The model. System.Object [] keys The keys. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the write operation to the database. Type Parameters Name Description TEntity The type of the entity. Update<TEntity>(TEntity, Object[], CancellationToken) Updates the specified model. If the entity class contains the Copyable attribute will copy only the tagged properties. Declaration public Task<IActionResult> Update<TEntity>(TEntity model, object[] keys, CancellationToken cancellationToken) where TEntity : class Parameters Type Name Description TEntity model The model. System.Object [] keys The keys. System.Threading.CancellationToken cancellationToken The cancellation token. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the write operation to the database. Type Parameters Name Description TEntity The type of the entity. Update<TEntity>(TEntity, String[], Object[]) Updates the specified model. Declaration public Task<IActionResult> Update<TEntity>(TEntity model, string[] ignoredProperties, params object[] keys) where TEntity : class Parameters Type Name Description TEntity model The model. System.String [] ignoredProperties The ignored properties. System.Object [] keys The keys. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the write operation to the database. Type Parameters Name Description TEntity The type of the entity. Update<TEntity>(TEntity, String[], Object[], CancellationToken) Updates the specified model. Declaration public Task<IActionResult> Update<TEntity>(TEntity model, string[] ignoredProperties, object[] keys, CancellationToken cancellationToken) where TEntity : class Parameters Type Name Description TEntity model The model. System.String [] ignoredProperties The ignored properties. System.Object [] keys The keys. System.Threading.CancellationToken cancellationToken The cancellation token. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the write operation to the database. Type Parameters Name Description TEntity The type of the entity. UpdateOnly<TEntity>(TEntity, String[], Object[]) Updates the specified model only with the provide list of properties. Declaration public Task<IActionResult> UpdateOnly<TEntity>(TEntity model, string[] includedProperties, params object[] keys) where TEntity : class Parameters Type Name Description TEntity model The model. System.String [] includedProperties The included properties. System.Object [] keys The keys. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the write operation to the database. Type Parameters Name Description TEntity The type of the entity. UpdateOnly<TEntity>(TEntity, String[], Object[], CancellationToken) Updates the specified model only with the provide list of properties. Declaration public Task<IActionResult> UpdateOnly<TEntity>(TEntity model, string[] includedProperties, object[] keys, CancellationToken cancellationToken) where TEntity : class Parameters Type Name Description TEntity model The model. System.String [] includedProperties The included properties. System.Object [] keys The keys. System.Threading.CancellationToken cancellationToken The cancellation token. Returns Type Description System.Threading.Tasks.Task < IActionResult > A task representing the write operation to the database. Type Parameters Name Description TEntity The type of the entity. See Also Microsoft.AspNetCore.Mvc.ControllerBase Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.AuthenticateSchemeMiddleware.html": {
    "href": "api/Unosquare.Swan.AspNetCore.AuthenticateSchemeMiddleware.html",
    "title": "Class AuthenticateSchemeMiddleware | Unosquare SWAN ASPNetCore",
    "keywords": "Class AuthenticateSchemeMiddleware Represents the authenticate scheme to the middleware. Inheritance System.Object AuthenticateSchemeMiddleware Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore Syntax public class AuthenticateSchemeMiddleware Constructors AuthenticateSchemeMiddleware(RequestDelegate, String) Initializes a new instance of the AuthenticateSchemeMiddleware class. Declaration public AuthenticateSchemeMiddleware(RequestDelegate next, string scheme) Parameters Type Name Description RequestDelegate next The next. System.String scheme The scheme. Exceptions Type Condition System.ArgumentNullException scheme. Methods Invoke(HttpContext) Invokes the specified HTTP context. Declaration public Task Invoke(HttpContext httpContext) Parameters Type Name Description HttpContext httpContext The HTTP context. Returns Type Description System.Threading.Tasks.Task The HTTP Context with the authenticate scheme. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.BusinessDbContext.html": {
    "href": "api/Unosquare.Swan.AspNetCore.BusinessDbContext.html",
    "title": "Class BusinessDbContext | Unosquare SWAN ASPNetCore",
    "keywords": "Class BusinessDbContext Represents a abstract class to create DbContext using Business Rules. Inheritance System.Object BusinessDbContext Implements IBusinessDbContext Namespace : Unosquare.Swan.AspNetCore Syntax public abstract class BusinessDbContext : DbContext, IBusinessDbContext Constructors BusinessDbContext(DbContextOptions) Initializes a new instance of the BusinessDbContext class. Declaration protected BusinessDbContext(DbContextOptions dbConnection) Parameters Type Name Description DbContextOptions dbConnection The database connection. Methods AddController(IBusinessRulesController) Adds the controller. Declaration public void AddController(IBusinessRulesController controller) Parameters Type Name Description IBusinessRulesController controller The controller. ContainsController(IBusinessRulesController) Determines whether the specified controller contains controller. Declaration public bool ContainsController(IBusinessRulesController controller) Parameters Type Name Description IBusinessRulesController controller The controller. Returns Type Description System.Boolean true if the specified controller contains controller; otherwise, false . RemoveController(IBusinessRulesController) Removes the controller. Declaration public void RemoveController(IBusinessRulesController controller) Parameters Type Name Description IBusinessRulesController controller The controller. RunBusinessRules() Runs the business rules. Declaration public void RunBusinessRules() SaveChanges() Declaration public override int SaveChanges() Returns Type Description System.Int32 SaveChangesAsync(CancellationToken) Declaration public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Implements IBusinessDbContext See Also IBusinessDbContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.BusinessRulesController-1.html": {
    "href": "api/Unosquare.Swan.AspNetCore.BusinessRulesController-1.html",
    "title": "Class BusinessRulesController<TDbContext> | Unosquare SWAN ASPNetCore",
    "keywords": "Class BusinessRulesController<TDbContext> Represent the controller of the business rules. Inheritance System.Object BusinessRulesController<TDbContext> AuditTrailController<TDbContext, TEntity> Implements IBusinessRulesController Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore Syntax public abstract class BusinessRulesController<TDbContext> : IBusinessRulesController where TDbContext : DbContext Type Parameters Name Description TDbContext The type of database. Constructors BusinessRulesController(TDbContext) Initializes a new instance of the BusinessRulesController<TDbContext> class. Declaration protected BusinessRulesController(TDbContext context) Parameters Type Name Description TDbContext context The context. Properties Context Gets or sets the context. Declaration public TDbContext Context { get; protected set; } Property Value Type Description TDbContext The context. Methods GetEntityType(Object) Gets the type of the entity. Declaration public Type GetEntityType(object entity) Parameters Type Name Description System.Object entity The entity. Returns Type Description System.Type The type of the current instance. RunBusinessRules() Runs the business rules. Declaration public void RunBusinessRules() Implements IBusinessRulesController See Also IBusinessRulesController Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.IBusinessDbContext.html": {
    "href": "api/Unosquare.Swan.AspNetCore.IBusinessDbContext.html",
    "title": "Interface IBusinessDbContext | Unosquare SWAN ASPNetCore",
    "keywords": "Interface IBusinessDbContext Creates a new DbContext with support to run BusinessControllers. Namespace : Unosquare.Swan.AspNetCore Syntax public interface IBusinessDbContext Methods AddController(IBusinessRulesController) Adds the controller. Declaration void AddController(IBusinessRulesController controller) Parameters Type Name Description IBusinessRulesController controller The controller. ContainsController(IBusinessRulesController) Determines whether the specified controller contains controller. Declaration bool ContainsController(IBusinessRulesController controller) Parameters Type Name Description IBusinessRulesController controller The controller. Returns Type Description System.Boolean true if the specified controller contains controller; otherwise, false . RemoveController(IBusinessRulesController) Removes the controller. Declaration void RemoveController(IBusinessRulesController controller) Parameters Type Name Description IBusinessRulesController controller The controller. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.Logger.EntityFrameworkLogger-2.html": {
    "href": "api/Unosquare.Swan.AspNetCore.Logger.EntityFrameworkLogger-2.html",
    "title": "Class EntityFrameworkLogger<TDbContext, TLog> | Unosquare SWAN ASPNetCore",
    "keywords": "Class EntityFrameworkLogger<TDbContext, TLog> Represents a Logger using EntityFramework Based on https://github.com/staff0rd/entityframework-logging . Inheritance System.Object EntityFrameworkLogger<TDbContext, TLog> Namespace : Unosquare.Swan.AspNetCore.Logger Syntax public class EntityFrameworkLogger<TDbContext, TLog> : ILogger where TDbContext : DbContext where TLog : LogEntry, new() Type Parameters Name Description TDbContext The type of the database context. TLog The type of the log. Constructors EntityFrameworkLogger(String, Func<String, LogLevel, Boolean>, IServiceProvider) Initializes a new instance of the EntityFrameworkLogger<TDbContext, TLog> class. Declaration public EntityFrameworkLogger(string name, Func<string, LogLevel, bool> filter, IServiceProvider serviceProvider) Parameters Type Name Description System.String name The name. System.Func < System.String , System.LogLevel , System.Boolean > filter The filter. System.IServiceProvider serviceProvider The service provider. Methods BeginScope<TState>(TState) Declaration public IDisposable BeginScope<TState>(TState state) Parameters Type Name Description TState state Returns Type Description System.IDisposable Type Parameters Name Description TState IsEnabled(LogLevel) Declaration public bool IsEnabled(LogLevel logLevel) Parameters Type Name Description System.LogLevel logLevel Returns Type Description System.Boolean Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) Declaration public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter) Parameters Type Name Description System.LogLevel logLevel EventId eventId TState state System.Exception exception System.Func <TState, System.Exception , System.String > formatter Type Parameters Name Description TState Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.Logger.EntityFrameworkLoggerProvider-2.html": {
    "href": "api/Unosquare.Swan.AspNetCore.Logger.EntityFrameworkLoggerProvider-2.html",
    "title": "Class EntityFrameworkLoggerProvider<TDbContext, TLog> | Unosquare SWAN ASPNetCore",
    "keywords": "Class EntityFrameworkLoggerProvider<TDbContext, TLog> Represents a EF logger provider. Inheritance System.Object EntityFrameworkLoggerProvider<TDbContext, TLog> Namespace : Unosquare.Swan.AspNetCore.Logger Syntax public class EntityFrameworkLoggerProvider<TDbContext, TLog> : ILoggerProvider where TDbContext : DbContext where TLog : LogEntry, new() Type Parameters Name Description TDbContext The type of the database context. TLog The type of the log. Constructors EntityFrameworkLoggerProvider(IServiceProvider, Func<String, LogLevel, Boolean>) Initializes a new instance of the EntityFrameworkLoggerProvider<TDbContext, TLog> class. Declaration public EntityFrameworkLoggerProvider(IServiceProvider serviceProvider, Func<string, LogLevel, bool> filter) Parameters Type Name Description System.IServiceProvider serviceProvider The service provider. System.Func < System.String , System.LogLevel , System.Boolean > filter The filter. Methods CreateLogger(String) Declaration public ILogger CreateLogger(string name) Parameters Type Name Description System.String name Returns Type Description ILogger Explicit Interface Implementations IDisposable.Dispose() Declaration void IDisposable.Dispose() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.Models.ApplicationUser.html": {
    "href": "api/Unosquare.Swan.AspNetCore.Models.ApplicationUser.html",
    "title": "Class ApplicationUser | Unosquare SWAN ASPNetCore",
    "keywords": "Class ApplicationUser Represents an User. Inheritance System.Object System.Security.Claims.ClaimsIdentity ApplicationUser Implements System.Security.Principal.IIdentity Inherited Members System.Security.Claims.ClaimsIdentity.DefaultIssuer System.Security.Claims.ClaimsIdentity.DefaultNameClaimType System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType System.Security.Claims.ClaimsIdentity.Clone() System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim) System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>) System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim) System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim) System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate<System.Security.Claims.Claim>) System.Security.Claims.ClaimsIdentity.FindAll(System.String) System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate<System.Security.Claims.Claim>) System.Security.Claims.ClaimsIdentity.HasClaim(System.String, System.String) System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate<System.Security.Claims.Claim>) System.Security.Claims.ClaimsIdentity.FindFirst(System.String) System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader) System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter) System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter, System.Byte[]) System.Security.Claims.ClaimsIdentity.AuthenticationType System.Security.Claims.ClaimsIdentity.IsAuthenticated System.Security.Claims.ClaimsIdentity.Actor System.Security.Claims.ClaimsIdentity.BootstrapContext System.Security.Claims.ClaimsIdentity.Claims System.Security.Claims.ClaimsIdentity.CustomSerializationData System.Security.Claims.ClaimsIdentity.Label System.Security.Claims.ClaimsIdentity.Name System.Security.Claims.ClaimsIdentity.NameClaimType System.Security.Claims.ClaimsIdentity.RoleClaimType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore.Models Syntax public class ApplicationUser : ClaimsIdentity, IIdentity Properties Email Gets or sets the email. Declaration public string Email { get; set; } Property Value Type Description System.String PasswordHash Gets or sets the password hash. Declaration public string PasswordHash { get; set; } Property Value Type Description System.String PhoneNumber Gets or sets the phone number. Declaration public string PhoneNumber { get; set; } Property Value Type Description System.String PhoneNumberConfirmed Gets or sets a value indicating whether [phone number confirmed]. Declaration public bool PhoneNumberConfirmed { get; set; } Property Value Type Description System.Boolean TwoFactorEnabled Gets or sets a value indicating whether [two factor enabled]. Declaration public bool TwoFactorEnabled { get; set; } Property Value Type Description System.Boolean UserId Gets or sets the user identifier. Declaration public string UserId { get; set; } Property Value Type Description System.String UserName Gets or sets the name of the user. Declaration public string UserName { get; set; } Property Value Type Description System.String Implements System.Security.Principal.IIdentity See Also System.Security.Claims.ClaimsIdentity Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.Models.IAuditTrailEntry.html": {
    "href": "api/Unosquare.Swan.AspNetCore.Models.IAuditTrailEntry.html",
    "title": "Interface IAuditTrailEntry | Unosquare SWAN ASPNetCore",
    "keywords": "Interface IAuditTrailEntry Represents an AuditTrail Entry. Namespace : Unosquare.Swan.AspNetCore.Models Syntax public interface IAuditTrailEntry Properties Action Gets or sets the action. Declaration int Action { get; set; } Property Value Type Description System.Int32 The action. DateCreated Gets or sets the date created. Declaration DateTime DateCreated { get; set; } Property Value Type Description System.DateTime The date created. JsonBody Gets or sets the json body. Declaration string JsonBody { get; set; } Property Value Type Description System.String The json body. TableName Gets or sets the name of the table. Declaration string TableName { get; set; } Property Value Type Description System.String The name of the table. UserId Gets or sets the user identifier. Declaration string UserId { get; set; } Property Value Type Description System.String The user identifier. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.Models.LogEntry.html": {
    "href": "api/Unosquare.Swan.AspNetCore.Models.LogEntry.html",
    "title": "Class LogEntry | Unosquare SWAN ASPNetCore",
    "keywords": "Class LogEntry Represents a common Log Entry to use with the EF Logger. Inheritance System.Object LogEntry Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore.Models Syntax public class LogEntry Fields MaximumExceptionLength The maximum exception length. Declaration public const int MaximumExceptionLength = 2000 Field Value Type Description System.Int32 MaximumMessageLength The maximum message length. Declaration public const int MaximumMessageLength = 4000 Field Value Type Description System.Int32 Properties Browser Gets or sets the browser. Declaration public string Browser { get; set; } Property Value Type Description System.String Date Gets or sets the date. Declaration public DateTime Date { get; set; } Property Value Type Description System.DateTime Exception Gets or sets the exception. Declaration public string Exception { get; set; } Property Value Type Description System.String HostAddress Gets or sets the host address. Declaration public string HostAddress { get; set; } Property Value Type Description System.String Id Gets or sets the identifier. Declaration public int Id { get; set; } Property Value Type Description System.Int32 Level Gets or sets the level. Declaration public string Level { get; set; } Property Value Type Description System.String Logger Gets or sets the logger. Declaration public string Logger { get; set; } Property Value Type Description System.String Message Gets or sets the message. Declaration public string Message { get; set; } Property Value Type Description System.String Thread Gets or sets the thread. Declaration public string Thread { get; set; } Property Value Type Description System.String Url Gets or sets the URL. Declaration public string Url { get; set; } Property Value Type Description System.String Username Gets or sets the username. Declaration public string Username { get; set; } Property Value Type Description System.String Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.Models.html": {
    "href": "api/Unosquare.Swan.AspNetCore.Models.html",
    "title": "Namespace Unosquare.Swan.AspNetCore.Models | Unosquare SWAN ASPNetCore",
    "keywords": "Namespace Unosquare.Swan.AspNetCore.Models Classes ApplicationRole Represents a Role. ApplicationUser Represents an User. LogEntry Represents a common Log Entry to use with the EF Logger. Interfaces IAuditTrailEntry Represents an AuditTrail Entry. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.html": {
    "href": "api/Unosquare.Swan.AspNetCore.html",
    "title": "Namespace Unosquare.Swan.AspNetCore | Unosquare SWAN ASPNetCore",
    "keywords": "Namespace Unosquare.Swan.AspNetCore Classes ApiControllerBase<TDbContext> Represents a API Controller with extended methods related to the database provide in T . AuditTrailController<TDbContext, TEntity> Represents an AuditTrail controller to use with BusinessDbContext. AuthenticateSchemeMiddleware Represents the authenticate scheme to the middleware. BasicRoleStore Represents a basic RoleStore for AspNetCore Identity. BasicUserStore Represents a basic UserStore for AspNetCore Identity. BusinessDbContext Represents a abstract class to create DbContext using Business Rules. BusinessRuleAttribute Decorate methods with this attribute to execute business rules that match the following signature: public void MethodName(T entity). BusinessRulesController<TDbContext> Represent the controller of the business rules. Extensions Extensions methods to implement SWAN providers. TokenProviderMiddleware Token generator middleware component which is added to an HTTP pipeline. TokenProviderOptions Provides options for TokenProviderMiddleware . Interfaces IBusinessDbContext Creates a new DbContext with support to run BusinessControllers. IBusinessRulesController Represents a Business Rules Controller. Enums ActionFlags defines a combination of actions in a CRUD pattern. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Swan.AspNetCore.AuditTrailController-2.html": {
    "href": "api/Unosquare.Swan.AspNetCore.AuditTrailController-2.html",
    "title": "Class AuditTrailController<TDbContext, TEntity> | Unosquare SWAN ASPNetCore",
    "keywords": "Class AuditTrailController<TDbContext, TEntity> Represents an AuditTrail controller to use with BusinessDbContext. Inheritance System.Object BusinessRulesController <TDbContext> AuditTrailController<TDbContext, TEntity> Implements IBusinessRulesController Inherited Members BusinessRulesController<TDbContext>.Context BusinessRulesController<TDbContext>.RunBusinessRules() BusinessRulesController<TDbContext>.GetEntityType(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Swan.AspNetCore Syntax public class AuditTrailController<TDbContext, TEntity> : BusinessRulesController<TDbContext>, IBusinessRulesController where TDbContext : DbContext Type Parameters Name Description TDbContext The type of database. TEntity The type of the entity. Constructors AuditTrailController(TDbContext, String) Initializes a new instance of the AuditTrailController<TDbContext, TEntity> class. Declaration public AuditTrailController(TDbContext context, string currentUserId) Parameters Type Name Description TDbContext context The context. System.String currentUserId The current user identifier. Methods AddTypes(ActionFlags, Type[]) Adds the types. Declaration public void AddTypes(ActionFlags action, Type[] types) Parameters Type Name Description ActionFlags action The action. System.Type [] types The types. OnDeleteCreated(Object) Called when [delete created]. Declaration [BusinessRule(ActionFlags.Create | ActionFlags.Update | ActionFlags.Delete)] public virtual void OnDeleteCreated(object entity) Parameters Type Name Description System.Object entity The entity. OnEntityCreated(Object) Called when [entity created]. Declaration [BusinessRule(ActionFlags.Create)] public virtual void OnEntityCreated(object entity) Parameters Type Name Description System.Object entity The entity. OnEntityUpdated(Object) Called when [entity updated]. Declaration [BusinessRule(ActionFlags.Update)] public virtual void OnEntityUpdated(object entity) Parameters Type Name Description System.Object entity The entity. Implements IBusinessRulesController Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  }
}